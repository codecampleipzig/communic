/**
 * Global Variables
 */

:root {
  --primaryColor: #6a6deb;
  --primaryLight: #9da0ff;
  --primaryColorDark: #040785;
  --primaryColorHighlight: #8487ff;
  --secondaryColorGreen: #33cca7;
  --secondaryColorOrange: #ff8633;
  --secondaryColorOrangeLight: #ffb966;
  --warningRed: #a02000;
  --successGreen: #009974;
  --fontDarkGrey: #7a7a7a;
  --fontMediumGrey: #a5a5b1;
  --fontLightGrey: #e4e4eb;
  --iconColor: #9da0ff; /* Used for the trash Icon in the Tasklist */
  --placeholderGrey: #f8f8f8; /* Used for placeholder Picture Backgrounds */
  --backgroundGrey: #fdfdfd; /* Used for the TaskListIcons */
  --borderGrey: #e4e4eb; /* Used for the Checkbox */
  --borderMediumGrey: #a5a5b1;
  --borderPlaceholderGrey: #d8d8d8;

  /* Dropshadows to use box-shadow: var(--smallShadow); */
  --smallShadow: 0px 1px 2px rgba(228, 228, 235, 1);
  --bigShadow: 0px 2px 24px rgba(228, 228, 235, 1);
  --biggerShadow: 0px 2px 24px 8px rgba(228, 228, 235, 1);
}

/**
 * Document & Body
 */

html,
body {
  font-size: 14px;
  line-height: 20px;
}

/* Add Transition on everything */
* {
  transition: width 0.4s, height 0.4s, padding 0.4s, margin 0.4s, transform 0.4s, opacity 0.4s, box-shadow 0.4s,
    border 0.4s, background-color 0.4s, color 0.4s;
}

body {
  font-family: "Josefin Sans", sans-serif;
  font-weight: 300;
  margin: 0;
}

/**
 * Text, Headlines, Plain HTML Elements
 */

h2 {
  font-family: "Montserrat", sans-serif;
  font-weight: 600;
}

h3 {
  color: var(--secondaryColorGreen);
  font-weight: 400;
  line-height: 20px;
}

h4 {
  margin: 0;
  font-weight: 300;
  font-size: 1.2rem;
}

p {
  line-height: 1.5;
  white-space: pre-line;
  hyphens: auto;
  overflow: hidden;
}

a,
button {
  color: var(--primaryColor);
  text-decoration: none;
}

a:hover,
button:hover {
  color: var(--primaryColorHighlight);
  text-decoration: underline;
}

img {
  max-width: 100%;
}

small,
.small {
  font-size: 0.9em;
}

/**
 * Buttons & Forms
 */

/* Reset Button Styles */
button {
  background: transparent;
  cursor: pointer;
  border: 0 none;
  padding: 0;
  font-family: inherit;
  font-size: 1em;
}

/* Fundamentals for Buttons, Input & Textareas */
.button,
input,
textarea {
  font-size: 1rem;
  line-height: 1.5;
  border-radius: 5px;
  box-sizing: border-box;
  font-family: inherit;
}

.button {
  cursor: pointer;
  background-color: var(--primaryColor);
  color: #fff;
  border: 0 none;
  min-width: 130px;
  padding: 0.9em 1.5em;
  appearance: none;
  white-space: nowrap;
}

.button:hover,
.button:focus {
  background-color: var(--secondaryColorGreen);
  color: #fff;
  outline: 0 none;
  text-decoration: none;
}

/* Margin to the right for every Icon inside a button. Caption needs to be placed in a span-Element then! */
.button i:not(:last-child),
.button app-icon:not(:last-child) button i:not(:last-child),
button app-icon:not(:last-child) {
  margin-right: 0.5em;
}

/* Hide the caption and reset margin right for the icon. Caption needs to be in a span-Element */
@media (max-width: 480px) {
  .caption-mobile-hidden i {
    margin-right: 0 !important;
  }
  .caption-mobile-hidden {
    min-width: auto;
  }
  .caption-mobile-hidden span {
    display: none;
  }
}

/* Button Elements without background but border */

.button-leave {
  border: 1px solid var(--warningRed);
  color: var(--warningRed);
  background-color: transparent;
  padding: 0.5em 1em;
  border-radius: 1.5em;
  min-width: auto;
  font-size: 0.9rem;
  padding: 0.3em 1em;
}

.button-leave:hover,
.button-leave:focus {
  color: #fff;
  background-color: var(--warningRed);
  border: 1px solid var(--warningRed);
}
.button.outlined {
  border: 1px solid var(--primaryColor);
  color: var(--primaryColor);
  background-color: transparent;
  padding: 0.5em 1em;
}

.button.outlined:hover {
  color: #fff;
  background-color: var(--primaryColor);
}

/* And make the border round */
.button.round {
  border-radius: 1.5em;
  min-width: auto;
  font-size: 0.9rem;
  padding: 0.42em 1em 0.3em 1em;
}

input[type="text"],
input[type="email"],
input[type="password"],
textarea {
  border: 1px solid var(--borderGrey);
  width: 100%;
  padding: 0.9em 1.5em;
}

/* Change Fontcolor if theres no value yet. */
input[type="text"]:not(:focus):placeholder-shown,
input[type="email"]:not(:focus):placeholder-shown,
input[type="password"]:not(:focus):placeholder-shown,
textarea:not(:focus):placeholder-shown {
  color: var(--borderGrey);
}

/* Place form fields inside a label-element for spacing */
label {
  display: block;
  margin-bottom: 1em;
}

/* Error Messages next to input & textarea */
.form-rule {
  color: var(--warningRed);
  text-align: start;
  display: block;
}
.form-rule.show-rule {
  color: var(--fontLightGrey);
}

.ng-valid + .form-rule.show-rule {
  color: var(--successGreen);
}

.show-errors .ng-invalid + .form-rule.show-rule {
  color: var(--warningRed);
}

/**
 * Utilities
 */

.unstyled-list {
  list-style: none;
  margin: 0;
  padding: 0;
}

.unstyled-list > li {
  margin: 0;
  padding: 0;
}

/* Make a fast flex-row with standard-behaviour `align-items: center` */
.display-flex {
  display: flex;
  flex-flow: wrap;
  align-items: center;
}

.text-center {
  text-align: center;
}

/* absolute positioned div for control icons in the top right of .card. There should be a button Elements inside with an i.fa-icon Element inside. Make sure the icons won't overlap content! */
.top-right-icons {
  position: absolute;
  top: 1em;
  right: 1em;
  cursor: pointer;
  color: var(--iconColor);
}

.top-right-icons > * {
  color: var(--iconColor);
  margin-left: 0.75em;
}

.hover-green:hover {
  color: var(--successGreen);
}

.hover-red:hover {
  color: var(--warningRed);
}

/**
 * Modules
 */

/* Adds background for different content sections. Usually inside or together with a .container */
.card {
  position: relative;
  background: #ffffff;
  box-shadow: var(--bigShadow);
  border-radius: 10px;
  padding: 1em 1.5em 2em; /* Space around the content of the cards */
  margin: 1em auto 0; /* Margin to top and center with auto */
  box-sizing: border-box; /* Calculate width with padding */
  max-width: 450px;
}

@media (min-height: 650px) and (min-width: 480px) {
  .card {
    margin-top: 3em;
  }
}

@media (min-width: 500px) {
  .card {
    padding: 2em 3em; /* Increase space around content */
    width: calc(100% - 4em);
  }
}

/* Overrides for .card in the .cardList (e.g. Projects Overview) */
.card img {
  height: 400px;
  background-position: 50% 50%;
  object-fit: contain;
}
.card-list > .card {
  width: 100%;
  padding: 1em;
  margin: 0;
}

.card-list > .card:hover {
  box-shadow: var(--biggerShadow);
}

@media (min-width: 500px) {
  .card-list > .card {
    padding: 1.5em;
  }
}

/* .card in .card looks like a TaskListItem */
.card .card {
  background: var(--backgroundGrey);
  box-shadow: var(--smallShadow);
  color: var(--fontDarkGrey);
  position: relative;
  border-radius: 4px;
  padding: 0.5em 1em;
  margin: 0 0 1em 0;
  max-width: 100%;
  width: 100%;
}

/* Position Content in the middle of the page with a maximum width */
.container {
  position: relative;
  max-width: 1100px;
  margin: 1em auto 0;
  display: block;
  width: calc(100% - 2em); /* Space around the card */
}

@media (min-height: 650px) and (min-width: 480px) {
  .container {
    margin-top: 3em;
  }
}

/**
 * User-Image containing an image or an font-awesome icon as placeholder
 * Change the size via font-size on .user-image
 * Or change height & width & change font-size to adjust placeholder-icon size
 */
.user-image {
  border: 1px solid var(--borderPlaceholderGrey);
  border-radius: 50%;
  color: var(--borderPlaceholderGrey);
  height: 2em;
  width: 2em;
  font-size: 2rem;
  display: inline-block;
  overflow: hidden;
  box-shadow: var(--smallShadow);
  position: relative;
  line-height: 1;
  text-align: center;
}

.user-image img {
  object-fit: cover;
  object-position: center;
  width: 100%;
  height: 100%;
  position: relative;
  z-index: 1;
}

.user-image i,
.user-image app-icon {
  width: 1em;
  height: 1em;
  position: relative;
  top: 50%;
  transform: translateY(-50%);
}
